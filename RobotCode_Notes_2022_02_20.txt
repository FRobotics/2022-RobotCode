2/20/2022   JAS  Robot Code Notes.


Team Code
	Autonomous Independent
	-- Create a "No Nothing Forever" routine and put this as the last
		step to ensure auto continues until the game mode changes to 
		teleop.
	-- For the "Default" case, write a message or something indicating
		that no auto routine is selected !
	-- Case "Danger Circle".  Don't write global variables Directly !!!

	Begin
	-- Ensure that the gyro calibration is finished before opening the
		compressor.

	Disabled
	-- no comments.

	Finish
	-- no comments... (no need to close other things.  this never gets called...)

	Periodic Tasks
	-- "get" (acquire) routines should be called before the "execute" routines.
		(Acquire, Decide, Act).
	-- climb system may need a "get" routine.
	-- neatness -- avoid crossing wires...

	Robot Global Data
	-- no comments

	Teleop
	-- Label what each driving case is for!!!
	-- DONT USE GLOBAL VARIABLES in this VI.  Call your "setter" VIs !!!!
	-- Turn the driving Case decider if statements into a separate VI.  
		Will make code cleaner.
	-- Wire neatness -- especially when crossing into or out of case stmt.
	-- Extract all the Button, Axes, and POV values outside the case statement.
		Allows easier univeral use..
	-- What is "ShootButton", "RevButton", and "ClimbButton" global variables.
		Process all the buttons IN THIS ROUTINE and pass their values via
		setter functions to other routines if needed.
	-- Add small deadbands for Axes.  These tend not to get all the way to 
		zero.
	-- Use Integers, not floats, for case indexes.  (Right click and select
		"representatio" to change constant data type.)

	Test
	-- no comments.

	Vision Processing
	-- no comments.

Robot Main
	-- no comments

DriveSystem
	-General-
	-- All VI in the Drive system should have "Drive" in their name!
		If not specifically for drive system, move to general purpose
		directory.

	BadEncoder
	-- no longer needed or used..

	Drive_Get_Speed
	-- Add a routine to get gyro reading, or add gyro output here.
	-- Add a routine to get lidar distance, or add lidar output here.
	-- Add a routine to get encoder distance, or add distance output here.

	Drive_Motor_Speed_Test
	-- no comment
	-- Can be used to tune PID !!

	DriveForwardDistance
	-- There is a "Timer" routine to check for expired.  The existing code 
		is okay too.
	-- Use setter and getter VI instead of global variables...
	-- Implement calculation for Threshold Error input (Currently hardcoded
		at 7.0) as a function of max speed so routine behaves the same
		regardless what the users passes as max speed.  In other words
		keep the "slope" of the slow down function the same and start
		the slow down at a different threshold error value depending
		on what max speed the user passes...
	-- Now that encoder speed and PID work, do you want the min speed to be
		2 FT/SEC ??
	-- One constant can feed multiple VIs.. (What is there is okay.  However
		one is changed and the other one isn't, funny things will happen.)

	DriveGlobals
	-- Looks good.  Ensure there are setter/getter VI for these things!

	DriveNetwork
	-- Looks good.
	-- Could put a prefix in the name to arrange things.  Example
		"Drive/" will arrange things in a "Drive" heirarchy.

	ExecuteSpeed
	-- Don't put the slew rate limiters in case statements.  This has some
		side affects.   Just feed with different values.
		(This is because each separate one remembers the time it 
		last ran...)
	-- If there is time, the PID could be tuned a little.
		Ki can probably be larger..  (maybe between 1 and 2)
	-- Check robot mode.  If disabled, use zero as the speed demand and
		write this to global variable.  A small non-zero speed demand
		when the motors are forced to zero will cause the I part of the
		PID to wind up.  This causes the "jump" when enabling.

	GetDrive
	JoyToFPS
	OpenDrive
	SetDistanceFromWall
	SetDriveSpeedDmd
	TurnDistance.
	

